#!/bin/sh
#
# Copyright (c) 2017, Flinders University, South Australia. All rights reserved.
# Contributors: Library, Corporate Services, Flinders University.
# See the accompanying LICENSE file (or http://opensource.org/licenses/BSD-3-Clause).
#
# touch_file_list.sh
# See usage_exit() for usage.
#
# This script "touches" a large number of files in the current directory.
# The script allows the user to create files on a Linux/Unix system
# which are each zero bytes in length but have the same modified-dates
# as the original files on some other system. In my case it allows me
# to not have to SFTP 1GB for every 100 digitised thesis files. Having
# an accurate modified-date allows other scripts to report it as the
# scan date.
#
# The expected input-file format (generated by Busybox "ls -e") is:
#   total 1338522
#   ----------    1 42949672 UsersGrp  26125908 Tue Nov 15 12:11:54 2016 bloggs_j_99111122223333_0.pdf
#   ----------    1 42949672 UsersGrp  12054254 Mon Oct 31 13:44:57 2016 smith jones_a_99222233334444_0.pdf
#   ----------    1 42949672 UsersGrp  29082163 Tue Nov 15 11:20:47 2016 smith'jones_b_99333344445555_0.pdf
#   ----------    1 42949672 UsersGrp  24633009 Mon Nov  7 15:07:56 2016 smith-jones_c_99444455556666_0.pdf
#
##############################################################################
APP=`basename $0`

##############################################################################
usage_exit() {
  [ "$1" != "" ] && echo "$1"	>&2
  cat <<-EO_USAGE_MSG		>&2

		Usage:  $APP  [-h|--help]  [-f|--force]  FILE_LIST
		where:
		* FILE_LIST is the output of Busybox "ls -e"
		* -f|--force will force the commands to be actioned
		  (as the default is to not action the commands)
		* -h|--help will show this usage message

	EO_USAGE_MSG
  exit 1
}

##############################################################################
do_cmds=0		# Default: Do not action commands
if [ "$1" = -f -o "$1" = --force ]; then
  do_cmds=1		# Action the commands
  shift
fi

[ "$1" = -h -o "$1" = --help ] && usage_exit
file_list="$1"

[ "$file_list" = "" ] && usage_exit "No file was specified."
[ ! -r "$file_list" ] && usage_exit "'$file_list' does not exist or is not readable."

egrep -v "^total [0-9]+$" "$file_list" |
  while read a b c d e f month dd time yyyy fname; do
    # FIXME: Consider sanity checks for: month dd time yyyy fname
    cmd=`printf "touch -d \"%02d-%s-%s %s\" \"%s\"\n"   $dd $month $yyyy $time "$fname"`
    echo "COMMAND: $cmd"
    [ $do_cmds = 1 ] && eval $cmd
  done

